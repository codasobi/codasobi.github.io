<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Network on Play with code | codasobi</title><link>https://codasobi.github.com/categories/network/</link><description>Recent content in Network on Play with code | codasobi</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 08 May 2024 20:00:00 +0000</lastBuildDate><atom:link href="https://codasobi.github.com/categories/network/index.xml" rel="self" type="application/rss+xml"/><item><title>域名解析（DNS Lookup） 的簡介</title><link>https://codasobi.github.com/p/dns-lookup/</link><pubDate>Wed, 08 May 2024 20:00:00 +0000</pubDate><guid>https://codasobi.github.com/p/dns-lookup/</guid><description>&lt;h2 id="為什麼需要域名解析">為什麼需要域名解析？
&lt;/h2>&lt;p>每個連上網際網路的裝置都有一個唯一的 IP 地址，這是一串數字，用來識別和連接網路上的裝置。對於一般使用者來說，記住 IP 地址可能非常困難。域名解析的目的是讓我們可以使用簡單易記的名稱（域名）來訪問網站，而不用記住一連串的數字。&lt;/p>
&lt;h2 id="域名解析的運作方式">域名解析的運作方式
&lt;/h2>&lt;p>域名解析主要依靠域名系統（DNS），這是一個分散式的系統，用來管理域名與 IP 地址之間的對應關係。以下是域名解析的主要步驟：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>DNS 解析器：當你在瀏覽器中輸入域名時，DNS 解析器會開始工作。它負責查詢並找到對應的 IP 地址。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>尋找根域名伺服器：DNS 解析器會先詢問根域名伺服器，根域名伺服器是 DNS 系統的最上層節點，它可以指引查詢下一步該去哪個伺服器。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>尋找頂級域名 (TLD) 伺服器：根域名伺服器會把請求轉發到負責特定頂級域名（例如 &amp;ldquo;.com&amp;rdquo; 或 &amp;ldquo;.org&amp;rdquo;）的伺服器。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>尋找權威 DNS 伺服器：頂級域名伺服器再將請求轉給該域名的權威 DNS 伺服器，這些伺服器包含了該域名對應的 IP 地址。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>返回 IP 地址：權威 DNS 伺服器提供對應的 IP 地址，並將其傳回 DNS 解析器，再由解析器傳給瀏覽器或其他應用程式。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>連接到目標伺服器：當瀏覽器得到 IP 地址後，它可以連接到目標伺服器，並開始請求網頁內容或其他服務。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="不同類型的域名解析">不同類型的域名解析
&lt;/h2>&lt;p>域名解析有不同的類型，主要依據查詢的方式和目的來分類。常見的幾種類型包括：&lt;/p>
&lt;ul>
&lt;li>正向解析：將域名轉換成 IP 地址。&lt;/li>
&lt;li>反向解析：將 IP 地址轉換成域名，通常用於網路排錯或其他技術應用。&lt;/li>
&lt;li>遞歸查詢：由 DNS 解析器負責完整的查詢過程，從根伺服器到權威伺服器。&lt;/li>
&lt;li>迭代查詢：每個伺服器只返回下一個查詢的方向，而不提供最終答案。&lt;/li>
&lt;/ul>
&lt;h2 id="結論">結論
&lt;/h2>&lt;p>域名解析是網際網路中不可或缺的過程，它讓我們可以使用易記的域名來訪問網站，而不用記住複雜的 IP 地址。DNS 透過一系列的查詢步驟，將域名與相應的 IP 地址對應起來，讓網際網路的運作更為順暢且方便。&lt;/p></description></item><item><title>TCP 和 UDP 的簡介</title><link>https://codasobi.github.com/p/tcp-vs-udp/</link><pubDate>Wed, 08 May 2024 18:00:00 +0000</pubDate><guid>https://codasobi.github.com/p/tcp-vs-udp/</guid><description>&lt;h2 id="什麼是-tcp">什麼是 TCP？
&lt;/h2>&lt;p>TCP（Transmission Control Protocol，傳輸控制協定）是一個面向連線的、可靠的協定。這意味著在傳輸資料之前，TCP 需要建立一個連線，並保證資料在傳輸過程中的完整性和順序。&lt;/p>
&lt;h2 id="tcp-的主要特點">TCP 的主要特點
&lt;/h2>&lt;p>三次握手：在傳輸資料之前，TCP 需要通過三次握手建立連線。這個過程確保了雙方都準備好傳輸資料。&lt;/p>
&lt;ul>
&lt;li>可靠性：TCP 通過確認和重傳機制確保資料的完整性。如果封包在傳輸過程中丟失或損壞，TCP 會自動重傳。&lt;/li>
&lt;li>順序性：TCP 保證封包按順序到達。這對於需要有序資料的應用程式非常重要。&lt;/li>
&lt;li>流量控制：TCP 使用流量控制來防止資料傳輸過快，避免網路擁塞。&lt;/li>
&lt;li>擁塞控制：TCP 通過監控網路流量，動態調整傳輸速率，以避免網路過載。&lt;/li>
&lt;/ul>
&lt;h2 id="tcp-的應用場景">TCP 的應用場景
&lt;/h2>&lt;p>TCP 適合需要可靠性和順序的應用程式。例如，網頁瀏覽、電子郵件、文件傳輸等。這些應用程式需要確保所有資料都完整且有序地到達。&lt;/p>
&lt;h2 id="什麼是-udp">什麼是 UDP？
&lt;/h2>&lt;p>UDP（User Datagram Protocol 使用者資料封包協定）是一個無連線的、簡單的協定。與 TCP 不同，UDP 不需要建立連線，也不保證資料的可靠性和順序。&lt;/p>
&lt;h2 id="udp-的主要特點">UDP 的主要特點
&lt;/h2>&lt;ul>
&lt;li>無連線：UDP 不需要建立連線。封包可以隨時發送，不需要三次握手。&lt;/li>
&lt;li>不可靠性：UDP 不提供資料的確認和重傳。這意味著封包可能會在傳輸過程中丟失或損壞。&lt;/li>
&lt;li>低延遲：由於沒有建立連接和確認機制，UDP 的傳輸延遲較低。&lt;/li>
&lt;li>簡單：UDP 的協定結構比 TCP 簡單，這使得它在某些情況下更高效。&lt;/li>
&lt;/ul>
&lt;h2 id="udp-的應用場景">UDP 的應用場景
&lt;/h2>&lt;p>UDP 適合對延遲敏感、不需要可靠性的應用程式。例如，語音和視訊、線上遊戲、直播等。在這些應用中，低延遲比資料的完整性更重要，並且可以容忍少量的資料丟失。&lt;/p>
&lt;h2 id="tcp-和-udp-的差異">TCP 和 UDP 的差異
&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>特性&lt;/th>
&lt;th>TCP&lt;/th>
&lt;th>UDP&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>連接方式&lt;/td>
&lt;td>面向連線（需要三次握手）&lt;/td>
&lt;td>無連線&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>可靠性&lt;/td>
&lt;td>提供確認和重傳&lt;/td>
&lt;td>不提供確認或重傳&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>順序性&lt;/td>
&lt;td>保證資料按順序到達&lt;/td>
&lt;td>不保證資料順序&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>傳輸延遲&lt;/td>
&lt;td>相對較高&lt;/td>
&lt;td>低延遲&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>流量控制&lt;/td>
&lt;td>有流量控制&lt;/td>
&lt;td>無流量控制&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>擁塞控制&lt;/td>
&lt;td>有擁塞控制&lt;/td>
&lt;td>無擁塞控制&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>開銷&lt;/td>
&lt;td>較高&lt;/td>
&lt;td>較低&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>主要用途&lt;/td>
&lt;td>需要可靠性和順序的應用&lt;/td>
&lt;td>對延遲敏感的應用&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>TCP 和 UDP 是網路通信中的兩個重要協定，各自有不同的特點和應用場景。理解它們的差異，可以幫助你在不同的情況下選擇合適的協定。&lt;/p></description></item></channel></rss>